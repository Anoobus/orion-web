@using Orion.Web.Employees
@using Orion.Web.TimeEntries
@using Orion.Web.Api.Expenditures.Models
@using Orion.Web.UI.Models
@using Orion.Web.BLL.Expenditures

@model Orion.Web.UI.Models.ExpenseViewModel

<style>
    ul.no-dots li {
        list-style: none;
    }
</style>
<div id="thingy" class="not-yet-a-modal">
    <form name="save-expense-form" asp-controller="ExpenseManagement" asp-action="SaveExpense">
            <div class="row">
            <div class="col s3 red darken-3 white-text modal-info-blurb z-depth-4">
                <div class="container">
                    @if (Model.IsBrandNewExpenditureCreation)
                    {
                        <h5>Add New Expenditure <br /></h5>
                        <h7>
                            <ul class="no-dots">
                                <li>Type: </li>
                                <li>
                                    <em>@Model.ExpenseTypeDisplayname</em>
                                </li>
                            </ul>
                        </h7>
                    }
                    else
                    {
                        //storing this to prevent multiple switch calls
                        var basicInfo = Model.BasicInfo;
                        <h5>Edit Expenditure <br /></h5>
                        <h7>
                            <ul class="no-dots">
                                <li>Entry: </li>
                                <li>
                                    <em>@basicInfo.ShortExpenseName</em>
                                </li>
                            </ul>
                                
                        </h7>
                       
                        <h7>
                           <ul class="no-dots">
                               <li>Original Job: </li>
                               <li>
                                   <em>@basicInfo.FullJobNameWithCode</em>
                               </li>
                            </ul>                                                        
                        </h7>
                      
                        <h7>
                            <ul class="no-dots">
                                <li>
                                    Original Employee: 
                                </li>
                                <li>
                                    <em>@basicInfo.EmployeeName</em>
                                </li>
                            </ul>
                        </h7>
                    }

                </div>
            </div>
            <div class="col s9" style="height:100%; padding:30px">
                @Html.HiddenFor(x => x.ExpenseType)

                @switch (Model.ExpenseType)
                {
                    case ExpenditureTypeEnum.ArcFlashLabelExpenditure:
                        @await Html.PartialAsync("EditArcFlashPartial", Model)
                        break;
                    case ExpenditureTypeEnum.CompanyVehicleExpenditure:
                        @await Html.PartialAsync("EditCompanyVehiclePartial", Model)
                        break;
                    case ExpenditureTypeEnum.ContractorExpenditure:
                        @await Html.PartialAsync("EditContractorPartial", Model)
                        break;
                    case ExpenditureTypeEnum.TimeAndExpenceExpenditure:
                        @await Html.PartialAsync("EditTimeAndExpensePartial", Model)
                        break;
                    case ExpenditureTypeEnum.MiscExpenditure:
                        @await Html.PartialAsync("EditMiscPartial", Model)
                        break;
                    default:
                        break;
                }
                <div class="modal-footer" style="vertical-align:bottom">
                    @if (Model.IsBrandNewExpenditureCreation)
                    {
                        <button type="button" class="waves-effect waves-white btn-flat" onclick="submitExpenseChanges('save-expense-form')">Add Expenditure</button>
                    }
                    else
                    {
                        <button type="button" class="waves-effect waves-white btn-flat" onclick="submitExpenseChanges('save-expense-form')">Save Changes</button>
                        <button type="button" class="waves-effect waves-white btn-flat" onclick="deleteExpense('@Model.BasicInfo.Id');return false;">Delete Expense</button>
                    }
                    <button type="button" class="modal-close waves-effect waves-white btn-flat" data-dismiss="modal">Cancel</button>
                </div>
            </div>


        </div>
    </form>
</div>