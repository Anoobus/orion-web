@using orion.web.Employees
@using orion.web.TimeEntries
@using orion.web.api.expenditures.Models
@using orion.web.UI.Models

@model ExpenseViewModel
<style>
    .modal {
        width: 80vw;
    }
</style>
<div class="row" style="display:none">
    <div class="col s12">
        @if (Model.IsBrandNewExpenditureCreation)
            //default to first employee in case user doesn't change emp selection
            Model.CompanyVehicleExpenditure.Detail.EmployeeId = Model.AvailableEmployees.First().EmployeeId;            
        }
        @Html.HiddenFor(x => x.CompanyVehicleExpenditure.Detail.EmployeeId);
        @Html.HiddenFor(x => x.CompanyVehicleExpenditure.Detail.JobId);
        @Html.HiddenFor(x => x.CompanyVehicleExpenditure.Detail.WeekId);
        @Html.HiddenFor(x => x.CompanyVehicleExpenditure.Detail.ExternalId);
        @Html.HiddenFor(x => x.CompanyVehicleExpenditure.Detail.Vehicle);

    </div>
</div>
<div class="row">
    <div class="input-field col s10">
        @{
            var selectedJob = Model.IsBrandNewExpenditureCreation ? string.Empty
                                                    : Model.AvailableJobs.FirstOrDefault(x => x.JobId == Model.CompanyVehicleExpenditure.JobId).FullJobCodeWithName;
        }
        @if (!Model.IsBrandNewExpenditureCreation)
        {
            <input type="hidden" id="original-job-text"
                   value="@selectedJob"
                   job-id="@Model.CompanyVehicleExpenditure.JobId" />
        }
        <i class="material-icons prefix">search</i>
        <input type="text" id="NewlySelectedJob-Name"
               class="autocomplete validate"
               value="@selectedJob"
               onfocus="oneTimeClear(this)"
               onchange="updateJobSelection(this,'CompanyVehicleExpenditure_Detail_JobId')"
               placeholder="Type Job Code..." />
        <label for="NewlySelectedJob-Name">Expense For Job</label>
    </div>
    <div class="col s2">
        @if (!Model.IsBrandNewExpenditureCreation)
        {
            <button id="cancel-job-change" type="button" class="waves-effect waves-white btn-flat" onclick="undoJobChange(this)">Undo Job Change</button>
        }
    </div>
</div>
<div class="row">
    <div class="input-field col s6">
        <i class="material-icons prefix">person</i>
        <select id="AvailableEmployees" class="validate"
                onchange="updateTargetEmployee(this, 'CompanyVehicleExpenditure_Detail_EmployeeId')">
            @foreach (var emp in Model.AvailableEmployees)
            {
                if (!Model.IsBrandNewExpenditureCreation && emp.EmployeeId == Model.CompanyVehicleExpenditure.Detail.EmployeeId)
                {
                    <option value="@emp.EmployeeId" selected="selected">@emp.First, @emp.Last</option>
                }
                else
                {
                    <option value="@emp.EmployeeId">@emp.First, @emp.Last</option>
                }
            }
        </select>
        <label asp-for="CompanyVehicleExpenditure.EmployeeName">For Employee</label>
    </div>
    <div class="input-field col s6">
        <input asp-for="CompanyVehicleExpenditure.Detail.DateVehicleFirstUsed" type="text" class="datepicker"
               value="@Model.CompanyVehicleExpenditure.Detail.DateVehicleFirstUsed.ToString("MMM dd, yyyy")" />
        <label asp-for="CompanyVehicleExpenditure.Detail.DateVehicleFirstUsed" class="control-label">Expense On Date</label>
    </div>
</div>
<div class="row">
    <div class="input-field col s4">
        <i class="material-icons prefix">directions_car</i>
        <select id="AvailableVehicles" class="validate"
                onchange="updateTargetVehicle(this, 'CompanyVehicleExpenditure_Detail_Vehicle')">

            @if (!Model.IsBrandNewExpenditureCreation && CompanyVehicleDescriptor.Enclave == Model.CompanyVehicleExpenditure.Detail.Vehicle)
            {
                <option value="@((int)CompanyVehicleDescriptor.Enclave)" selected="selected">Enclave</option>
            }
            else
            {
                <option value="@((int)CompanyVehicleDescriptor.Enclave)">Enclave</option>
            }

            @if (!Model.IsBrandNewExpenditureCreation && CompanyVehicleDescriptor.Encore == Model.CompanyVehicleExpenditure.Detail.Vehicle)
            {
                <option value="@((int)CompanyVehicleDescriptor.Encore)" selected="selected">Encore</option>
            }
            else
            {
                <option value="@((int)CompanyVehicleDescriptor.Encore)">Encore</option>
            }

            @if (!Model.IsBrandNewExpenditureCreation && CompanyVehicleDescriptor.Truck == Model.CompanyVehicleExpenditure.Detail.Vehicle)
            {
                <option value="@((int)CompanyVehicleDescriptor.Truck)" selected="selected">Truck</option>
            }
            else
            {
                <option value="@((int)CompanyVehicleDescriptor.Truck)">Truck</option>
            }

        </select>
        <label for="AvailableVehicles" >Vehicle</label>
    </div>
    <div class="input-field col s4">
        <input asp-for="CompanyVehicleExpenditure.Detail.TotalMiles" placeholder="Miles" />
        <label asp-for="CompanyVehicleExpenditure.Detail.TotalMiles">Total Miles Used</label>
    </div>
    <div class="input-field col s4">
        <input asp-for="CompanyVehicleExpenditure.Detail.TotalNumberOfDaysUsed" placeholder="Days" />
        <label asp-for="CompanyVehicleExpenditure.Detail.TotalNumberOfDaysUsed">Days Used</label>
    </div>
</div>
<script type="text/javascript"></script>
